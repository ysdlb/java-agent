<?xml version="1.0" encoding="UTF-8"?>

<!-- 从高到低：OFF，FATAL，ERROR，WARN，INFO，DEBUG，TRACE，ALL -->
<!-- 日志输出规则：输出比当前ROOT级别高的日志，另外亦可考虑filter级别过滤器 -->

<!--
	scan=true，一旦配置文件发生改变，将会被重新加载，默认为true；
	scanPeriod，监测配置文件是否有修改的时间间隔，默认单位是毫秒，scan为true才生效，默认的时间间隔为1分钟；
	debug=true，打印logback内部日志信息，实时查看logback运行状态，默认为false；
-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!-- 定义日志文件位置 -->
    <property name="log_dir" value="/var/log/tomcat"/>
    <!-- 	<property name="log_dir" value="d:/log/starbucksdemo" /> -->
    <!-- 日志最大历史30天 -->
    <property name="maxHistory" value="30"/>
    <!-- 单个文件最大 -->
    <property name="maxFileSize" value="100MB" />
    <!-- 总文件大小 -->
    <property name="totalSizeCap" value="20GB" />
    <!-- 控制台输出日志 -->

    <springProperty scope="context" name="appName" source="spring.application.name"/>

    <!-- 本地控制台用, 带点颜色美化 -->
    <appender name="CONSOLE_BEAUTIFY" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 对日志进行格式化 -->
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <charset>UTF-8</charset>
            <layout class="ch.qos.logback.classic.PatternLayout">
                <pattern>%blue(%d{yyyy-MM-dd HH:mm:ss.SSS}) %yellow([%thread]) %magenta([%X{x-transaction-id}]) %highlight(%-5level) %green(%L %logger) - %msg%n</pattern>
            </layout>
        </encoder>
    </appender>

    <!-- 异步输出控制台日志 -->
    <appender name="CONSOLE_BEAUTIFY_ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>512</queueSize>
        <appender-ref ref="CONSOLE_BEAUTIFY"/>
        <includeCallerData>true</includeCallerData>
    </appender>

    <!-- package log level configure -->
    <logger name="ch.qos.logback" level="WARN"/>

    <root level="INFO">
        <!-- 控制台输出, 这个输出只本地控制台使用, 即 local 环境和 dev 环境 -->
        <appender-ref ref="CONSOLE_BEAUTIFY_ASYNC"/>
        <!-- 舍弃文件输出 -->
    </root>
</configuration>